{"ast":null,"code":"import _slicedToArray from \"/Users/proprietaire/Desktop/PWA-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react'; // utils\n\nconst isClient = typeof window === 'object';\n\nconst on = (obj, ...args) => obj.addEventListener(...args);\n\nconst off = (obj, ...args) => obj.removeEventListener(...args);\n\nconst patchHistoryMethod = method => {\n  const original = window.history[method];\n\n  window.history[method] = function (state) {\n    const result = original.apply(this, arguments);\n    const event = new Event(method.toLowerCase());\n    event.state = state;\n    window.dispatchEvent(event);\n    return result;\n  };\n};\n\nif (isClient) {\n  patchHistoryMethod('pushState');\n  patchHistoryMethod('replaceState');\n}\n\nexport const useLocation = () => {\n  const buildState = trigger => {\n    const _window$history = window.history,\n          state = _window$history.state,\n          length = _window$history.length;\n    const _window$location = window.location,\n          hash = _window$location.hash,\n          host = _window$location.host,\n          hostname = _window$location.hostname,\n          href = _window$location.href,\n          origin = _window$location.origin,\n          pathname = _window$location.pathname,\n          port = _window$location.port,\n          protocol = _window$location.protocol,\n          search = _window$location.search;\n    return {\n      trigger,\n      state,\n      length,\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search\n    };\n  };\n\n  const _useState = useState(isClient ? buildState('load') : {\n    trigger: 'load',\n    length: 1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    const onChange = trigger => setState(buildState(trigger));\n\n    const onPopstate = () => onChange('popstate');\n\n    const onPushstate = () => onChange('pushstate');\n\n    const onReplacestate = () => onChange('replacestate');\n\n    on(window, 'popstate', onPopstate);\n    on(window, 'pushstate', onPushstate);\n    on(window, 'replacestate', onReplacestate);\n    return () => {\n      off(window, 'popstate', onPopstate);\n      off(window, 'pushstate', onPushstate);\n      off(window, 'replacestate', onReplacestate);\n    };\n  }, []);\n  return state;\n};","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/library/hooks/useLocation.js"],"names":["useEffect","useState","isClient","window","on","obj","args","addEventListener","off","removeEventListener","patchHistoryMethod","method","original","history","state","result","apply","arguments","event","Event","toLowerCase","dispatchEvent","useLocation","buildState","trigger","length","location","hash","host","hostname","href","origin","pathname","port","protocol","search","setState","onChange","onPopstate","onPushstate","onReplacestate"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\n// utils\nconst isClient = typeof window === 'object';\nconst on = (obj, ...args) => obj.addEventListener(...args);\nconst off = (obj, ...args) => obj.removeEventListener(...args);\n\nconst patchHistoryMethod = method => {\n  const original = window.history[method];\n  window.history[method] = function(state) {\n    const result = original.apply(this, arguments);\n    const event = new Event(method.toLowerCase());\n    event.state = state;\n    window.dispatchEvent(event);\n    return result;\n  };\n};\nif (isClient) {\n  patchHistoryMethod('pushState');\n  patchHistoryMethod('replaceState');\n}\nexport const useLocation = () => {\n  const buildState = trigger => {\n    const { state, length } = window.history;\n    const {\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search,\n    } = window.location;\n    return {\n      trigger,\n      state,\n      length,\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search,\n    };\n  };\n  const [state, setState] = useState(\n    isClient\n      ? buildState('load')\n      : {\n          trigger: 'load',\n          length: 1,\n        }\n  );\n  useEffect(() => {\n    const onChange = trigger => setState(buildState(trigger));\n    const onPopstate = () => onChange('popstate');\n    const onPushstate = () => onChange('pushstate');\n    const onReplacestate = () => onChange('replacestate');\n    on(window, 'popstate', onPopstate);\n    on(window, 'pushstate', onPushstate);\n    on(window, 'replacestate', onReplacestate);\n    return () => {\n      off(window, 'popstate', onPopstate);\n      off(window, 'pushstate', onPushstate);\n      off(window, 'replacestate', onReplacestate);\n    };\n  }, []);\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}