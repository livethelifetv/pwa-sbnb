{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/components/ContactForm/ContactFrom.js\";\nimport React from 'react';\nimport { Field, Form } from 'formik';\nimport { AntInput, AntTextArea, AntCheckbox } from 'components/UI/Antd/AntdInputWithFormik';\nimport Button from 'components/UI/Antd/Button/Button';\nimport Row from 'components/UI/Antd/Grid/Row';\nimport Col from 'components/UI/Antd/Grid/Col';\nimport HtmlLabel from 'components/UI/HtmlLabel/HtmlLabel';\nimport FormWrapper, { FieldWrapper } from './ContactForm.style';\n\nconst ContactForm = ({\n  values,\n  submitCount,\n  handleSubmit\n}) => /*#__PURE__*/React.createElement(FormWrapper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Form, {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  component: AntTextArea,\n  name: \"message\",\n  type: \"text\",\n  size: \"large\",\n  label: \"Your Message\",\n  submitCount: submitCount,\n  value: values.message,\n  hasFeedback: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Row, {\n  gutter: 30,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  md: 12,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  component: AntInput,\n  name: \"email\",\n  type: \"email\",\n  size: \"large\",\n  label: \"Your Email\",\n  submitCount: submitCount,\n  value: values.email,\n  hasFeedback: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }\n})), /*#__PURE__*/React.createElement(Col, {\n  md: 12,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  component: AntInput,\n  name: \"contact\",\n  type: \"number\",\n  size: \"large\",\n  label: \"Your Contact\",\n  value: values.contact,\n  submitCount: submitCount,\n  hasFeedback: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(FieldWrapper, {\n  className: \"field-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  component: AntCheckbox,\n  id: \"cookieConsent\",\n  name: \"cookieConsent\",\n  submitCount: submitCount,\n  value: values.cookieConsent,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(HtmlLabel, {\n  htmlFor: \"cookieConsent\",\n  content: \"Save my email in the broweser fro the next time I contact\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Button, {\n  className: \"signin-btn\",\n  type: \"primary\",\n  htmlType: \"submit\",\n  size: \"large\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}, \"Submit\")));\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/ContactForm/ContactFrom.js"],"names":["React","Field","Form","AntInput","AntTextArea","AntCheckbox","Button","Row","Col","HtmlLabel","FormWrapper","FieldWrapper","ContactForm","values","submitCount","handleSubmit","message","email","contact","cookieConsent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, Form } from 'formik';\nimport {\n  AntInput,\n  AntTextArea,\n  AntCheckbox,\n} from 'components/UI/Antd/AntdInputWithFormik';\nimport Button from 'components/UI/Antd/Button/Button';\nimport Row from 'components/UI/Antd/Grid/Row';\nimport Col from 'components/UI/Antd/Grid/Col';\nimport HtmlLabel from 'components/UI/HtmlLabel/HtmlLabel';\nimport FormWrapper, { FieldWrapper } from './ContactForm.style';\n\nconst ContactForm = ({ values, submitCount, handleSubmit }) => (\n  <FormWrapper>\n    <Form onSubmit={handleSubmit}>\n      <Field\n        component={AntTextArea}\n        name=\"message\"\n        type=\"text\"\n        size=\"large\"\n        label=\"Your Message\"\n        submitCount={submitCount}\n        value={values.message}\n        hasFeedback\n      />\n\n      <Row gutter={30}>\n        <Col md={12}>\n          <Field\n            component={AntInput}\n            name=\"email\"\n            type=\"email\"\n            size=\"large\"\n            label=\"Your Email\"\n            submitCount={submitCount}\n            value={values.email}\n            hasFeedback\n          />\n        </Col>\n        <Col md={12}>\n          <Field\n            component={AntInput}\n            name=\"contact\"\n            type=\"number\"\n            size=\"large\"\n            label=\"Your Contact\"\n            value={values.contact}\n            submitCount={submitCount}\n            hasFeedback\n          />\n        </Col>\n      </Row>\n\n      <FieldWrapper className=\"field-container\">\n        <Field\n          component={AntCheckbox}\n          id=\"cookieConsent\"\n          name=\"cookieConsent\"\n          submitCount={submitCount}\n          value={values.cookieConsent}\n        />\n        <HtmlLabel\n          htmlFor=\"cookieConsent\"\n          content=\"Save my email in the broweser fro the next time I contact\"\n        />\n      </FieldWrapper>\n\n      <Button\n        className=\"signin-btn\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n      >\n        Submit\n      </Button>\n    </Form>\n  </FormWrapper>\n);\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}