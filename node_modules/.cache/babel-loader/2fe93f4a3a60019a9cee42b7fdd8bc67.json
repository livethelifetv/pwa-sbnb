{"ast":null,"code":"import _objectWithoutProperties from \"/Users/proprietaire/Desktop/PWA-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/components/Listing/RenderUploadPhotosForm.js\";\nimport React from 'react';\nimport DragAndDropUploader from 'components/UI/ImageUploader/DragAndDropUploader';\nexport const PhotoUploadComponent = (_ref) => {\n  let field = _ref.field,\n      form = _ref.form,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n  const onChange = value => {\n    form.setFieldValue(field.name, value);\n  };\n\n  return /*#__PURE__*/React.createElement(DragAndDropUploader, {\n    name: field ? field.name : 'hotelPhotos',\n    value: field ? field.value : [],\n    onUploadChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/Listing/RenderUploadPhotosForm.js"],"names":["React","DragAndDropUploader","PhotoUploadComponent","field","form","props","onChange","value","setFieldValue","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,iDAAhC;AAEA,OAAO,MAAMC,oBAAoB,GAAG,UAI9B;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADDC,KACC;;AACJ,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBH,IAAAA,IAAI,CAACI,aAAL,CAAmBL,KAAK,CAACM,IAAzB,EAA+BF,KAA/B;AACD,GAFD;;AAGA,sBACE,oBAAC,mBAAD;AACE,IAAA,IAAI,EAAEJ,KAAK,GAAGA,KAAK,CAACM,IAAT,GAAgB,aAD7B;AAEE,IAAA,KAAK,EAAEN,KAAK,GAAGA,KAAK,CAACI,KAAT,GAAiB,EAF/B;AAGE,IAAA,cAAc,EAAED,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAfM","sourcesContent":["import React from 'react';\nimport DragAndDropUploader from 'components/UI/ImageUploader/DragAndDropUploader';\n\nexport const PhotoUploadComponent = ({\n  field, // { name, value, onChange, onBlur }\n  form, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc,\n  ...props\n}) => {\n  const onChange = value => {\n    form.setFieldValue(field.name, value);\n  };\n  return (\n    <DragAndDropUploader\n      name={field ? field.name : 'hotelPhotos'}\n      value={field ? field.value : []}\n      onUploadChange={onChange}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}