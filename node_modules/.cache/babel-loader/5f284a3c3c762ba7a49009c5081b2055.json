{"ast":null,"code":"import \"antd/es/progress/style/css\";\nimport _Progress from \"antd/es/progress\";\nvar _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/components/UI/Steppers/FormStepper.js\";\nimport React, { Fragment, Component } from 'react';\nimport { Formik } from 'formik';\nimport { IoIosArrowBack } from 'react-icons/io';\n\nclass PercentageCalculator extends React.Component {\n  render() {\n    const _this$props = this.props,\n          formchild = _this$props.formchild,\n          pageStack = _this$props.pageStack,\n          lastPage = _this$props.lastPage;\n    const original = formchild ? formchild.length : 0;\n    let value = 0;\n\n    if (original !== pageStack) {\n      value = Math.floor(pageStack * 100 / original);\n    } else if (original === pageStack) {\n      value = 100;\n    } else {\n      value = 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, lastPage ? /*#__PURE__*/React.createElement(_Progress, {\n      percent: 100,\n      showInfo: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(_Progress, {\n      percent: value,\n      showInfo: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nclass FormStepper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.next = values => {\n      this.setState(state => ({\n        page: Math.min(state.page + 1, this.props.children.length - 1),\n        values\n      }));\n    };\n\n    this.previous = () => this.setState(state => ({\n      page: Math.max(state.page - 1, 0)\n    }));\n\n    this.validate = values => {\n      const activePage = React.Children.toArray(this.props.children)[this.state.page];\n      return activePage.props.validate ? activePage.props.validate(values) : {};\n    };\n\n    this.handleSubmit = (values, bag) => {\n      const _this$props2 = this.props,\n            children = _this$props2.children,\n            onSubmit = _this$props2.onSubmit;\n      const page = this.state.page;\n      const isLastPage = page === React.Children.count(children) - 1;\n\n      if (isLastPage) {\n        return onSubmit(values, bag);\n      } else {\n        bag.setTouched({});\n        bag.setSubmitting(false);\n        this.next(values);\n      }\n    };\n\n    this.state = {\n      page: 0,\n      values: props.initialValues\n    };\n  }\n\n  render() {\n    const children = this.props.children;\n    const _this$state = this.state,\n          page = _this$state.page,\n          values = _this$state.values;\n    const activePage = React.Children.toArray(children)[page];\n    const isLastPage = page === React.Children.count(children) - 1;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PercentageCalculator, {\n      formchild: this.props.children,\n      pageStack: page,\n      lastPage: isLastPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: values,\n      enableReinitialize: false,\n      validate: this.validate,\n      onSubmit: this.handleSubmit,\n      render: ({\n        values,\n        handleSubmit,\n        isSubmitting,\n        handleReset\n      }) => /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, activePage), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inner-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, page > 0 && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"back-step-btn\",\n        onClick: this.previous,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IoIosArrowBack, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }\n      }), \" Back\"), !isLastPage && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"next-step-btn\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Next\"), isLastPage && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"submit-btn\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, \"Submit\")))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nFormStepper.Page = ({\n  children\n}) => children;\n\nexport default FormStepper;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/UI/Steppers/FormStepper.js"],"names":["React","Fragment","Component","Formik","IoIosArrowBack","PercentageCalculator","render","props","formchild","pageStack","lastPage","original","length","value","Math","floor","FormStepper","constructor","next","values","setState","state","page","min","children","previous","max","validate","activePage","Children","toArray","handleSubmit","bag","onSubmit","isLastPage","count","setTouched","setSubmitting","initialValues","isSubmitting","handleReset","Page"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { Formik } from 'formik';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { Progress } from 'antd';\n\nclass PercentageCalculator extends React.Component {\n  render() {\n    const { formchild, pageStack, lastPage } = this.props;\n    const original = formchild ? formchild.length : 0;\n    let value = 0;\n\n    if (original !== pageStack) {\n      value = Math.floor((pageStack * 100) / original);\n    } else if (original === pageStack) {\n      value = 100;\n    } else {\n      value = 0;\n    }\n\n    return (\n      <Fragment>\n        {lastPage ? (\n          <Progress percent={100} showInfo={false} />\n        ) : (\n          <Progress percent={value} showInfo={false} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass FormStepper extends Component {\n  static Page = ({ children }) => children;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      values: props.initialValues,\n    };\n  }\n\n  next = values => {\n    this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values,\n    }));\n  };\n\n  previous = () =>\n    this.setState(state => ({\n      page: Math.max(state.page - 1, 0),\n    }));\n\n  validate = values => {\n    const activePage = React.Children.toArray(this.props.children)[\n      this.state.page\n    ];\n    return activePage.props.validate ? activePage.props.validate(values) : {};\n  };\n\n  handleSubmit = (values, bag) => {\n    const { children, onSubmit } = this.props;\n    const { page } = this.state;\n    const isLastPage = page === React.Children.count(children) - 1;\n\n    if (isLastPage) {\n      return onSubmit(values, bag);\n    } else {\n      bag.setTouched({});\n      bag.setSubmitting(false);\n      this.next(values);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { page, values } = this.state;\n    const activePage = React.Children.toArray(children)[page];\n    const isLastPage = page === React.Children.count(children) - 1;\n\n    return (\n      <Fragment>\n        <PercentageCalculator\n          formchild={this.props.children}\n          pageStack={page}\n          lastPage={isLastPage}\n        />\n        <Formik\n          initialValues={values}\n          enableReinitialize={false}\n          validate={this.validate}\n          onSubmit={this.handleSubmit}\n          render={({ values, handleSubmit, isSubmitting, handleReset }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"steps-content\">{activePage}</div>\n              <div className=\"steps-action\">\n                <div className=\"inner-wrapper\">\n                  {page > 0 && (\n                    <button\n                      type=\"button\"\n                      className=\"back-step-btn\"\n                      onClick={this.previous}\n                    >\n                      <IoIosArrowBack /> Back\n                    </button>\n                  )}\n\n                  {!isLastPage && (\n                    <button className=\"next-step-btn\" type=\"submit\">\n                      Next\n                    </button>\n                  )}\n                  {isLastPage && (\n                    <button\n                      className=\"submit-btn\"\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                    >\n                      Submit\n                    </button>\n                  )}\n                </div>\n              </div>\n            </form>\n          )}\n        />\n      </Fragment>\n    );\n  }\n}\nexport default FormStepper;\n"]},"metadata":{},"sourceType":"module"}