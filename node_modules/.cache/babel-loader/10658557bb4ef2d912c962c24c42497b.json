{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/container/SignIn/SignInForm.js\";\nimport React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { Redirect } from 'react-router-dom';\nimport RenderSignInForm from 'components/SignIn/RenderSignInForm';\nimport * as Yup from 'yup';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\nconst initialValues = {\n  email: '',\n  password: '',\n  rememberMe: false\n};\n\nconst getLoginValidationSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is Required!'),\n    password: Yup.string().min(6, 'Password has to be longer than 6 characters!').max(20, 'Too Long!').required('Password is required!')\n  });\n};\n\nexport default (() => {\n  const _useContext = useContext(AuthContext),\n        signIn = _useContext.signIn,\n        loggedIn = _useContext.loggedIn;\n\n  if (loggedIn) return /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 24\n    }\n  });\n\n  const handleSubmit = formProps => {\n    signIn(formProps);\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    render: props => /*#__PURE__*/React.createElement(RenderSignInForm, Object.assign({}, props, {\n      forgetPasswordLink: FORGET_PASSWORD_PAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    })),\n    validationSchema: getLoginValidationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/container/SignIn/SignInForm.js"],"names":["React","useContext","Formik","Redirect","RenderSignInForm","Yup","AuthContext","FORGET_PASSWORD_PAGE","initialValues","email","password","rememberMe","getLoginValidationSchema","object","shape","string","required","min","max","signIn","loggedIn","pathname","handleSubmit","formProps","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,UAAU,EAAE;AAHQ,CAAtB;;AAMA,MAAMC,wBAAwB,GAAG,MAAM;AACrC,SAAOP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AACxBL,IAAAA,KAAK,EAAEJ,GAAG,CAACU,MAAJ,GACJN,KADI,CACE,eADF,EAEJO,QAFI,CAEK,oBAFL,CADiB;AAIxBN,IAAAA,QAAQ,EAAEL,GAAG,CAACU,MAAJ,GACPE,GADO,CACH,CADG,EACA,8CADA,EAEPC,GAFO,CAEH,EAFG,EAEC,WAFD,EAGPF,QAHO,CAGE,uBAHF;AAJc,GAAnB,CAAP;AASD,CAVD;;AAYA,gBAAe,MAAM;AAAA,sBACUf,UAAU,CAACK,WAAD,CADpB;AAAA,QACXa,MADW,eACXA,MADW;AAAA,QACHC,QADG,eACHA,QADG;;AAEnB,MAAIA,QAAJ,EAAc,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AACd,QAAMC,YAAY,GAAGC,SAAS,IAAI;AAChCJ,IAAAA,MAAM,CAACI,SAAD,CAAN;AACD,GAFD;;AAGA,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEf,aADjB;AAEE,IAAA,QAAQ,EAAEc,YAFZ;AAGE,IAAA,MAAM,EAAEE,KAAK,iBACX,oBAAC,gBAAD,oBACMA,KADN;AAEE,MAAA,kBAAkB,EAAEjB,oBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AASE,IAAA,gBAAgB,EAAEK,wBATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CAnBD","sourcesContent":["import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { Redirect } from 'react-router-dom';\nimport RenderSignInForm from 'components/SignIn/RenderSignInForm';\nimport * as Yup from 'yup';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\nconst initialValues = {\n  email: '',\n  password: '',\n  rememberMe: false,\n};\n\nconst getLoginValidationSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string()\n      .email('Invalid email')\n      .required('Email is Required!'),\n    password: Yup.string()\n      .min(6, 'Password has to be longer than 6 characters!')\n      .max(20, 'Too Long!')\n      .required('Password is required!'),\n  });\n};\n\nexport default () => {\n  const { signIn, loggedIn } = useContext(AuthContext);\n  if (loggedIn) return <Redirect to={{ pathname: '/' }} />;\n  const handleSubmit = formProps => {\n    signIn(formProps);\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      render={props => (\n        <RenderSignInForm\n          {...props}\n          forgetPasswordLink={FORGET_PASSWORD_PAGE}\n        />\n      )}\n      validationSchema={getLoginValidationSchema}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}