{"ast":null,"code":"import _slicedToArray from \"/Users/proprietaire/Desktop/PWA-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/proprietaire/Desktop/PWA-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/components/Review/ReviewFormComponent.js\";\nimport React, { useState } from 'react';\nimport Radio from 'components/UI/Antd/Radio/Radio';\nimport DragAndDropUploader from 'components/UI/ImageUploader/DragAndDropUploader';\nimport Checkbox from 'components/UI/Antd/Checkbox/Checkbox';\nimport Text from 'components/UI/Text/Text';\nexport const RadioGroupComp = (_ref) => {\n  let field = _ref.field,\n      form = _ref.form,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n  const dataOptions = props.dataOptions;\n\n  const onChangeValue = checkedValue => {\n    form.setFieldValue(field.name, checkedValue.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Radio.Group, {\n    onChange: onChangeValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, dataOptions && dataOptions.map((single, i) => {\n    return /*#__PURE__*/React.createElement(Radio.Button, {\n      key: i,\n      value: single.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, single.label);\n  })), form.touched[field.name] && form.errors[field.name] && /*#__PURE__*/React.createElement(Text, {\n    content: form.errors[field.name],\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n};\nexport const PhotoUploadComponent = (_ref2) => {\n  let field = _ref2.field,\n      form = _ref2.form,\n      props = _objectWithoutProperties(_ref2, [\"field\", \"form\"]);\n\n  const onChange = value => {\n    form.setFieldValue(field.name, value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DragAndDropUploader, {\n    name: field ? field.name : 'reviewPhotos',\n    value: field ? field.value : [],\n    onUploadChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), form.touched[field.name] && form.errors[field.name] && /*#__PURE__*/React.createElement(Text, {\n    content: form.errors[field.name],\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }));\n};\nexport const CheckBoxComp = (_ref3) => {\n  let field = _ref3.field,\n      form = _ref3.form,\n      props = _objectWithoutProperties(_ref3, [\"field\", \"form\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        checkedValue = _useState2[0],\n        setCheckedValue = _useState2[1];\n\n  const checkBoxContent = props.checkBoxContent;\n\n  const onChange = () => {\n    setCheckedValue(!checkedValue);\n    form.setFieldValue(field.name, checkedValue);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, checkBoxContent ? checkBoxContent : ''), form.touched[field.name] && form.errors[field.name] && /*#__PURE__*/React.createElement(Text, {\n    content: form.errors[field.name],\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/Review/ReviewFormComponent.js"],"names":["React","useState","Radio","DragAndDropUploader","Checkbox","Text","RadioGroupComp","field","form","props","dataOptions","onChangeValue","checkedValue","setFieldValue","name","target","value","map","single","i","label","touched","errors","PhotoUploadComponent","onChange","CheckBoxComp","setCheckedValue","checkBoxContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Radio from 'components/UI/Antd/Radio/Radio';\nimport DragAndDropUploader from 'components/UI/ImageUploader/DragAndDropUploader';\nimport Checkbox from 'components/UI/Antd/Checkbox/Checkbox';\nimport Text from 'components/UI/Text/Text';\n\nexport const RadioGroupComp = ({ field, form, ...props }) => {\n  const { dataOptions } = props;\n\n  const onChangeValue = checkedValue => {\n    form.setFieldValue(field.name, checkedValue.target.value);\n  };\n\n  return (\n    <>\n      <Radio.Group onChange={onChangeValue}>\n        {dataOptions &&\n          dataOptions.map((single, i) => {\n            return (\n              <Radio.Button key={i} value={single.value}>\n                {single.label}\n              </Radio.Button>\n            );\n          })}\n      </Radio.Group>\n      {form.touched[field.name] && form.errors[field.name] && (\n        <Text content={form.errors[field.name]} color=\"red\" />\n      )}\n    </>\n  );\n};\n\nexport const PhotoUploadComponent = ({ field, form, ...props }) => {\n  const onChange = value => {\n    form.setFieldValue(field.name, value);\n  };\n\n  return (\n    <>\n      <DragAndDropUploader\n        name={field ? field.name : 'reviewPhotos'}\n        value={field ? field.value : []}\n        onUploadChange={onChange}\n      />\n      {form.touched[field.name] && form.errors[field.name] && (\n        <Text content={form.errors[field.name]} color=\"red\" />\n      )}\n    </>\n  );\n};\n\nexport const CheckBoxComp = ({ field, form, ...props }) => {\n  const [checkedValue, setCheckedValue] = useState(false);\n  const { checkBoxContent } = props;\n\n  const onChange = () => {\n    setCheckedValue(!checkedValue);\n    form.setFieldValue(field.name, checkedValue);\n  };\n\n  return (\n    <>\n      <Checkbox onChange={onChange}>\n        {checkBoxContent ? checkBoxContent : ''}\n      </Checkbox>\n      {form.touched[field.name] && form.errors[field.name] && (\n        <Text content={form.errors[field.name]} color=\"red\" />\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}