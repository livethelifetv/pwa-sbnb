{"ast":null,"code":"import _slicedToArray from \"/Users/proprietaire/Desktop/PWA-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nexport default function Portal({\n  children,\n  rendererId\n}) {\n  const _useState = useState(document.createElement('div')),\n        _useState2 = _slicedToArray(_useState, 1),\n        containerEl = _useState2[0];\n\n  useEffect(() => {\n    let portalRoot = document.getElementById(rendererId) || document.body;\n    portalRoot.appendChild(containerEl);\n    return () => portalRoot.removeChild(containerEl);\n  });\n  return ReactDOM.createPortal(children, containerEl);\n}","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/UI/Portal/Portal.js"],"names":["useState","useEffect","ReactDOM","Portal","children","rendererId","document","createElement","containerEl","portalRoot","getElementById","body","appendChild","removeChild","createPortal"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAhB,EAA0C;AAAA,oBACjCL,QAAQ,CAACM,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAD,CADyB;AAAA;AAAA,QAChDC,WADgD;;AAEvDP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,UAAU,GAAGH,QAAQ,CAACI,cAAT,CAAwBL,UAAxB,KAAuCC,QAAQ,CAACK,IAAjE;AACAF,IAAAA,UAAU,CAACG,WAAX,CAAuBJ,WAAvB;AACA,WAAO,MAAMC,UAAU,CAACI,WAAX,CAAuBL,WAAvB,CAAb;AACD,GAJQ,CAAT;AAKA,SAAON,QAAQ,CAACY,YAAT,CAAsBV,QAAtB,EAAgCI,WAAhC,CAAP;AACD","sourcesContent":["// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\n\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function Portal({ children, rendererId }) {\n  const [containerEl] = useState(document.createElement('div'));\n  useEffect(() => {\n    let portalRoot = document.getElementById(rendererId) || document.body;\n    portalRoot.appendChild(containerEl);\n    return () => portalRoot.removeChild(containerEl);\n  });\n  return ReactDOM.createPortal(children, containerEl);\n}\n"]},"metadata":{},"sourceType":"module"}