{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/components/Review/ReviewCreateForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport RenderReviewForm from './RenderReviewForm';\nconst initialValues = {\n  reviewTitle: '',\n  reviewDetails: '',\n  tripType: '',\n  ratings: 5,\n  roomsRatings: 5,\n  serviceRatings: 5,\n  cleanlinessRatings: 5,\n  foodRatings: 5,\n  tips: '',\n  termsAndCondition: false,\n  quant: '',\n  roomViews: '',\n  indoorPool: '',\n  isTrendy: '',\n  isRomantic: '',\n  reviewPhotos: []\n};\n\nconst ReviewValidationSchema = () => {\n  return Yup.object().shape({\n    reviewTitle: Yup.string().required('Title is Required!'),\n    reviewDetails: Yup.string().required('Details is Required!'),\n    tripType: Yup.string().required('Trip Type is Required!'),\n    ratings: Yup.number().required('Rating  is Required!'),\n    roomsRatings: Yup.number().required('Room rating is Required!'),\n    serviceRatings: Yup.number().required('Service rating is Required!'),\n    cleanlinessRatings: Yup.number().required('Cleanness rating is Required!'),\n    foodRatings: Yup.number().required('Food rating is Required!'),\n    termsAndCondition: Yup.boolean().required('Terms and condition acceptence  is Required!'),\n    quant: Yup.string().oneOf(['yes', 'no', 'not-there']).required('Please select this information'),\n    roomViews: Yup.string().oneOf(['yes', 'no', 'not-there']).required('Please select this information'),\n    indoorPool: Yup.string().oneOf(['yes', 'no', 'not-there']).required('Please select this information'),\n    isTrendy: Yup.string().oneOf(['yes', 'no', 'not-there']).required('Please select this information'),\n    isRomantic: Yup.string().oneOf(['yes', 'no', 'not-there']).required('Please select this information')\n  });\n};\n\nconst handleSubmit = formProps => {\n  const reviewTitle = formProps.reviewTitle,\n        reviewDetails = formProps.reviewDetails,\n        tripType = formProps.tripType,\n        ratings = formProps.ratings,\n        roomsRatings = formProps.roomsRatings,\n        serviceRatings = formProps.serviceRatings,\n        cleanlinessRatings = formProps.cleanlinessRatings,\n        foodRatings = formProps.foodRatings,\n        tips = formProps.tips,\n        termsAndCondition = formProps.termsAndCondition,\n        quant = formProps.quant,\n        roomViews = formProps.roomViews,\n        indoorPool = formProps.indoorPool,\n        isTrendy = formProps.isTrendy,\n        isRomantic = formProps.isRomantic;\n  alert(\"Review Submission Form: \\n\\n    Review Title: \".concat(reviewTitle, \" \\n\\n    Review Details : \").concat(reviewDetails, \" \\n\\n    Trip Type : \").concat(tripType, \" \\n\\n    Ratings : \").concat(ratings, \" \\n\\n    Room Ratings : \").concat(roomsRatings, \" \\n\\n    Service Ratings : \").concat(serviceRatings, \" \\n\\n    Cleanness : \").concat(cleanlinessRatings, \" \\n\\n    Food Rating : \").concat(foodRatings, \" \\n\\n    Tips for other : \").concat(tips, \" \\n\\n    Is this a quaint hotel ? : \").concat(quant, \" \\n\\n    Does This Hotel offer rooms with great views ? : \").concat(roomViews, \" \\n\\n    Does This Hotel have an indoor pool ? : \").concat(indoorPool, \" \\n\\n    Is this a trendy hotel ? : \").concat(isTrendy, \" \\n\\n    Is this a romantic hotel ? : \").concat(isRomantic, \" \\n\\n    Agreed on Terms and Condition ? : \").concat(termsAndCondition, \" \\n\"));\n};\n\nexport default (() => /*#__PURE__*/React.createElement(Formik, {\n  initialValues: initialValues,\n  onSubmit: handleSubmit,\n  render: RenderReviewForm,\n  validationSchema: ReviewValidationSchema,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }\n}));","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/Review/ReviewCreateForm.js"],"names":["React","Formik","Yup","RenderReviewForm","initialValues","reviewTitle","reviewDetails","tripType","ratings","roomsRatings","serviceRatings","cleanlinessRatings","foodRatings","tips","termsAndCondition","quant","roomViews","indoorPool","isTrendy","isRomantic","reviewPhotos","ReviewValidationSchema","object","shape","string","required","number","boolean","oneOf","handleSubmit","formProps","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport RenderReviewForm from './RenderReviewForm';\n\nconst initialValues = {\n  reviewTitle: '',\n  reviewDetails: '',\n  tripType: '',\n  ratings: 5,\n  roomsRatings: 5,\n  serviceRatings: 5,\n  cleanlinessRatings: 5,\n  foodRatings: 5,\n  tips: '',\n  termsAndCondition: false,\n  quant: '',\n  roomViews: '',\n  indoorPool: '',\n  isTrendy: '',\n  isRomantic: '',\n  reviewPhotos: [],\n};\n\nconst ReviewValidationSchema = () => {\n  return Yup.object().shape({\n    reviewTitle: Yup.string().required('Title is Required!'),\n    reviewDetails: Yup.string().required('Details is Required!'),\n    tripType: Yup.string().required('Trip Type is Required!'),\n    ratings: Yup.number().required('Rating  is Required!'),\n    roomsRatings: Yup.number().required('Room rating is Required!'),\n    serviceRatings: Yup.number().required('Service rating is Required!'),\n    cleanlinessRatings: Yup.number().required('Cleanness rating is Required!'),\n    foodRatings: Yup.number().required('Food rating is Required!'),\n    termsAndCondition: Yup.boolean().required(\n      'Terms and condition acceptence  is Required!'\n    ),\n    quant: Yup.string()\n      .oneOf(['yes', 'no', 'not-there'])\n      .required('Please select this information'),\n    roomViews: Yup.string()\n      .oneOf(['yes', 'no', 'not-there'])\n      .required('Please select this information'),\n    indoorPool: Yup.string()\n      .oneOf(['yes', 'no', 'not-there'])\n      .required('Please select this information'),\n    isTrendy: Yup.string()\n      .oneOf(['yes', 'no', 'not-there'])\n      .required('Please select this information'),\n    isRomantic: Yup.string()\n      .oneOf(['yes', 'no', 'not-there'])\n      .required('Please select this information'),\n  });\n};\n\nconst handleSubmit = formProps => {\n  const {\n    reviewTitle,\n    reviewDetails,\n    tripType,\n    ratings,\n    roomsRatings,\n    serviceRatings,\n    cleanlinessRatings,\n    foodRatings,\n    tips,\n    termsAndCondition,\n    quant,\n    roomViews,\n    indoorPool,\n    isTrendy,\n    isRomantic,\n  } = formProps;\n\n  alert(\n    `Review Submission Form: \\n\n    Review Title: ${reviewTitle} \\n\n    Review Details : ${reviewDetails} \\n\n    Trip Type : ${tripType} \\n\n    Ratings : ${ratings} \\n\n    Room Ratings : ${roomsRatings} \\n\n    Service Ratings : ${serviceRatings} \\n\n    Cleanness : ${cleanlinessRatings} \\n\n    Food Rating : ${foodRatings} \\n\n    Tips for other : ${tips} \\n\n    Is this a quaint hotel ? : ${quant} \\n\n    Does This Hotel offer rooms with great views ? : ${roomViews} \\n\n    Does This Hotel have an indoor pool ? : ${indoorPool} \\n\n    Is this a trendy hotel ? : ${isTrendy} \\n\n    Is this a romantic hotel ? : ${isRomantic} \\n\n    Agreed on Terms and Condition ? : ${termsAndCondition} \\n`\n  );\n};\n\nexport default () => (\n  <Formik\n    initialValues={initialValues}\n    onSubmit={handleSubmit}\n    render={RenderReviewForm}\n    validationSchema={ReviewValidationSchema}\n  />\n);\n"]},"metadata":{},"sourceType":"module"}