{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/components/Map/Map.js\";\nimport React, { Fragment } from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\nimport { compose, withProps, withHandlers, withStateHandlers } from 'recompose';\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport HotelMapMarkerCluster from './ListingPageMap';\nimport HotelMapMarkerSingle from './SinglePageMap';\nimport { MAPSTYLE } from './MapStyle';\nexport const MapLoadingElement = mapLoadingProps => {\n  const height = mapLoadingProps.height;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  });\n};\nexport const mapRenderData = {\n  googleMapURL: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\n  loadingElement: /*#__PURE__*/React.createElement(MapLoadingElement, {\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  })\n};\nexport const MapDataProcessing = compose(withProps(mapRenderData), withHandlers({\n  onMarkerClustererClick: () => markerClusterer => {\n    const clickedMarkers = markerClusterer.getMarkers();\n    console.log(\"Current clicked markers length: \".concat(clickedMarkers.length));\n    console.log(clickedMarkers);\n  }\n}), withStateHandlers(() => ({\n  isOpen: false\n}), {\n  infoWindowToggle: ({\n    isOpen\n  }) => index => ({\n    isOpen: !isOpen,\n    markerIndex: index\n  })\n}), withScriptjs, withGoogleMap)(props => {\n  const multiple = props.multiple;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, multiple && multiple === true ? /*#__PURE__*/React.createElement(GoogleMap, {\n    styles: MAPSTYLE,\n    defaultZoom: 7,\n    defaultCenter: {\n      lat: 41.8858,\n      lng: -75.7223\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MarkerClusterer, {\n    onClick: props.onMarkerClustererClick,\n    averageCenter: true,\n    defaultEnableRetinaIcons: true,\n    gridSize: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HotelMapMarkerCluster, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))) : /*#__PURE__*/React.createElement(GoogleMap, {\n    styles: MAPSTYLE,\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: 40.706877,\n      lng: -74.011265\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HotelMapMarkerSingle, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n});\n\nconst Map = props => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, props.children);\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/Map/Map.js"],"names":["React","Fragment","withScriptjs","withGoogleMap","GoogleMap","compose","withProps","withHandlers","withStateHandlers","MarkerClusterer","HotelMapMarkerCluster","HotelMapMarkerSingle","MAPSTYLE","MapLoadingElement","mapLoadingProps","height","mapRenderData","googleMapURL","process","env","REACT_APP_GOOGLE_MAP_API_KEY","loadingElement","containerElement","mapElement","MapDataProcessing","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","length","isOpen","infoWindowToggle","index","markerIndex","props","multiple","lat","lng","Map","children"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\nimport { compose, withProps, withHandlers, withStateHandlers } from 'recompose';\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport HotelMapMarkerCluster from './ListingPageMap';\nimport HotelMapMarkerSingle from './SinglePageMap';\nimport { MAPSTYLE } from './MapStyle';\n\nexport const MapLoadingElement = mapLoadingProps => {\n  const { height } = mapLoadingProps;\n  return <div style={{ height: height }} />;\n};\n\nexport const mapRenderData = {\n  googleMapURL: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\n  loadingElement: <MapLoadingElement height=\"100%\" />,\n  containerElement: <div style={{ height: `400px` }} />,\n  mapElement: <div style={{ height: `400px` }} />,\n};\n\nexport const MapDataProcessing = compose(\n  withProps(mapRenderData),\n  withHandlers({\n    onMarkerClustererClick: () => markerClusterer => {\n      const clickedMarkers = markerClusterer.getMarkers();\n      console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n      console.log(clickedMarkers);\n    },\n  }),\n  withStateHandlers(\n    () => ({\n      isOpen: false,\n    }),\n    {\n      infoWindowToggle: ({ isOpen }) => index => ({\n        isOpen: !isOpen,\n        markerIndex: index,\n      }),\n    }\n  ),\n  withScriptjs,\n  withGoogleMap\n)(props => {\n  const { multiple } = props;\n  return (\n    <Fragment>\n      {multiple && multiple === true ? (\n        <GoogleMap\n          styles={MAPSTYLE}\n          defaultZoom={7}\n          defaultCenter={{\n            lat: 41.8858,\n            lng: -75.7223,\n          }}\n        >\n          <MarkerClusterer\n            onClick={props.onMarkerClustererClick}\n            averageCenter\n            defaultEnableRetinaIcons={true}\n            gridSize={60}\n          >\n            <HotelMapMarkerCluster {...props} />\n          </MarkerClusterer>\n        </GoogleMap>\n      ) : (\n        <GoogleMap\n          styles={MAPSTYLE}\n          defaultZoom={8}\n          defaultCenter={{\n            lat: 40.706877,\n            lng: -74.011265,\n          }}\n        >\n          <HotelMapMarkerSingle {...props} />\n        </GoogleMap>\n      )}\n    </Fragment>\n  );\n});\n\nconst Map = props => {\n  return <Fragment>{props.children}</Fragment>;\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}