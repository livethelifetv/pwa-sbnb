{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/PWA-master/src/components/Map/ListingPageMap.js\";\nimport React from 'react';\nimport { Marker } from 'react-google-maps';\nimport HotelInfoWindow from './MapInfoWindow';\nimport MakerImage from './hotelMapMarker.png';\n\nconst HotelMapMarkerCluster = props => {\n  let locationArray = [];\n  const location = props.location,\n        infoWindowToggle = props.infoWindowToggle,\n        isOpen = props.isOpen,\n        markerIndex = props.markerIndex;\n\n  if (location && location.length !== 0) {\n    for (let i = 0; i < location.length; i++) {\n      const id = location[i].id;\n      const lat = parseFloat(location[i].location.lat);\n      const lng = parseFloat(location[i].location.lng);\n      const title = location[i].title;\n      const thumbUrl = location[i].image.thumb_url;\n      const formattedAddress = location[i].location.formattedAddress;\n      const price = location[i].price;\n      const rating = location[i].rating;\n      const ratingCount = location[i].ratingCount;\n      locationArray.push({\n        id,\n        lat,\n        lng,\n        title,\n        thumbUrl,\n        formattedAddress,\n        price,\n        rating,\n        ratingCount\n      });\n    }\n  }\n\n  return locationArray.map((singlePostLoaction, index) => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: index,\n      icon: MakerImage,\n      position: singlePostLoaction,\n      onClick: () => {\n        infoWindowToggle(singlePostLoaction.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, isOpen && markerIndex === singlePostLoaction.id ? /*#__PURE__*/React.createElement(HotelInfoWindow, {\n      postData: singlePostLoaction,\n      onCloseClick: () => {\n        infoWindowToggle(singlePostLoaction.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }) : '');\n  });\n};\n\nexport default HotelMapMarkerCluster;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/PWA-master/src/components/Map/ListingPageMap.js"],"names":["React","Marker","HotelInfoWindow","MakerImage","HotelMapMarkerCluster","props","locationArray","location","infoWindowToggle","isOpen","markerIndex","length","i","id","lat","parseFloat","lng","title","thumbUrl","image","thumb_url","formattedAddress","price","rating","ratingCount","push","map","singlePostLoaction","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AACrC,MAAIC,aAAa,GAAG,EAApB;AADqC,QAE7BC,QAF6B,GAEuBF,KAFvB,CAE7BE,QAF6B;AAAA,QAEnBC,gBAFmB,GAEuBH,KAFvB,CAEnBG,gBAFmB;AAAA,QAEDC,MAFC,GAEuBJ,KAFvB,CAEDI,MAFC;AAAA,QAEOC,WAFP,GAEuBL,KAFvB,CAEOK,WAFP;;AAIrC,MAAIH,QAAQ,IAAIA,QAAQ,CAACI,MAAT,KAAoB,CAApC,EAAuC;AACrC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAACI,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACxC,YAAMC,EAAE,GAAGN,QAAQ,CAACK,CAAD,CAAR,CAAYC,EAAvB;AACA,YAAMC,GAAG,GAAGC,UAAU,CAACR,QAAQ,CAACK,CAAD,CAAR,CAAYL,QAAZ,CAAqBO,GAAtB,CAAtB;AACA,YAAME,GAAG,GAAGD,UAAU,CAACR,QAAQ,CAACK,CAAD,CAAR,CAAYL,QAAZ,CAAqBS,GAAtB,CAAtB;AACA,YAAMC,KAAK,GAAGV,QAAQ,CAACK,CAAD,CAAR,CAAYK,KAA1B;AACA,YAAMC,QAAQ,GAAGX,QAAQ,CAACK,CAAD,CAAR,CAAYO,KAAZ,CAAkBC,SAAnC;AACA,YAAMC,gBAAgB,GAAGd,QAAQ,CAACK,CAAD,CAAR,CAAYL,QAAZ,CAAqBc,gBAA9C;AACA,YAAMC,KAAK,GAAGf,QAAQ,CAACK,CAAD,CAAR,CAAYU,KAA1B;AACA,YAAMC,MAAM,GAAGhB,QAAQ,CAACK,CAAD,CAAR,CAAYW,MAA3B;AACA,YAAMC,WAAW,GAAGjB,QAAQ,CAACK,CAAD,CAAR,CAAYY,WAAhC;AAEAlB,MAAAA,aAAa,CAACmB,IAAd,CAAmB;AACjBZ,QAAAA,EADiB;AAEjBC,QAAAA,GAFiB;AAGjBE,QAAAA,GAHiB;AAIjBC,QAAAA,KAJiB;AAKjBC,QAAAA,QALiB;AAMjBG,QAAAA,gBANiB;AAOjBC,QAAAA,KAPiB;AAQjBC,QAAAA,MARiB;AASjBC,QAAAA;AATiB,OAAnB;AAWD;AACF;;AAED,SAAOlB,aAAa,CAACoB,GAAd,CAAkB,CAACC,kBAAD,EAAqBC,KAArB,KAA+B;AACtD,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAEzB,UAFR;AAGE,MAAA,QAAQ,EAAEwB,kBAHZ;AAIE,MAAA,OAAO,EAAE,MAAM;AACbnB,QAAAA,gBAAgB,CAACmB,kBAAkB,CAACd,EAApB,CAAhB;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGJ,MAAM,IAAIC,WAAW,KAAKiB,kBAAkB,CAACd,EAA7C,gBACC,oBAAC,eAAD;AACE,MAAA,QAAQ,EAAEc,kBADZ;AAEE,MAAA,YAAY,EAAE,MAAM;AAClBnB,QAAAA,gBAAgB,CAACmB,kBAAkB,CAACd,EAApB,CAAhB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAQC,EAhBJ,CADF;AAqBD,GAtBM,CAAP;AAuBD,CArDD;;AAuDA,eAAeT,qBAAf","sourcesContent":["import React from 'react';\nimport { Marker } from 'react-google-maps';\nimport HotelInfoWindow from './MapInfoWindow';\nimport MakerImage from './hotelMapMarker.png';\n\nconst HotelMapMarkerCluster = props => {\n  let locationArray = [];\n  const { location, infoWindowToggle, isOpen, markerIndex } = props;\n\n  if (location && location.length !== 0) {\n    for (let i = 0; i < location.length; i++) {\n      const id = location[i].id;\n      const lat = parseFloat(location[i].location.lat);\n      const lng = parseFloat(location[i].location.lng);\n      const title = location[i].title;\n      const thumbUrl = location[i].image.thumb_url;\n      const formattedAddress = location[i].location.formattedAddress;\n      const price = location[i].price;\n      const rating = location[i].rating;\n      const ratingCount = location[i].ratingCount;\n\n      locationArray.push({\n        id,\n        lat,\n        lng,\n        title,\n        thumbUrl,\n        formattedAddress,\n        price,\n        rating,\n        ratingCount,\n      });\n    }\n  }\n\n  return locationArray.map((singlePostLoaction, index) => {\n    return (\n      <Marker\n        key={index}\n        icon={MakerImage}\n        position={singlePostLoaction}\n        onClick={() => {\n          infoWindowToggle(singlePostLoaction.id);\n        }}\n      >\n        {isOpen && markerIndex === singlePostLoaction.id ? (\n          <HotelInfoWindow\n            postData={singlePostLoaction}\n            onCloseClick={() => {\n              infoWindowToggle(singlePostLoaction.id);\n            }}\n          />\n        ) : (\n          ''\n        )}\n      </Marker>\n    );\n  });\n};\n\nexport default HotelMapMarkerCluster;\n"]},"metadata":{},"sourceType":"module"}